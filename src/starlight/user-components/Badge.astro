---
import {
    BadgeComponentSchema,
    type BadgeComponentProps,
} from "../schemas/badge";
import { parseWithFriendlyErrors } from "../utils/error-map";
import type { HTMLAttributes } from "astro/types";

type Props = BadgeComponentProps & HTMLAttributes<"span">;

const {
    text,
    variant,
    size,
    class: customClass,
    ...attrs
} = parseWithFriendlyErrors(
    BadgeComponentSchema,
    Astro.props,
    "Invalid prop passed to the `<Badge/>` component."
);

/**
 * The fragment around the element is used as a workaround to avoid a trailing whitespace in the output.
 * @see https://github.com/withastro/compiler/issues/1003
 */
---

<span class:list={["sl-badge", variant, size, customClass]} {...attrs}
    >{text}</span
>

<style>
        :global(:root) {
            --sl-badge-default-border: var(--sl-color-accent);
            --sl-badge-default-bg: var(--sl-color-accent-low);
            --sl-badge-default-text: #fff;

            --sl-badge-note-border: var(--sl-color-blue);
            --sl-badge-note-bg: var(--sl-color-blue-low);
            --sl-badge-note-text: #fff;

            --sl-badge-danger-border: var(--sl-color-red);
            --sl-badge-danger-bg: var(--sl-color-red-low);
            --sl-badge-danger-text: #fff;

            --sl-badge-success-border: var(--sl-color-green);
            --sl-badge-success-bg: var(--sl-color-green-low);
            --sl-badge-success-text: #fff;

            --sl-badge-caution-border: var(--sl-color-orange);
            --sl-badge-caution-bg: var(--sl-color-orange-low);
            --sl-badge-caution-text: #fff;

            --sl-badge-tip-border: var(--sl-color-purple);
            --sl-badge-tip-bg: var(--sl-color-purple-low);
            --sl-badge-tip-text: #fff;
        }

        :global([data-theme="light"]:root) {
            --sl-badge-default-bg: var(--sl-color-accent-high);
            --sl-badge-note-bg: var(--sl-color-blue-high);
            --sl-badge-danger-bg: var(--sl-color-red-high);
            --sl-badge-success-bg: var(--sl-color-green-high);
            --sl-badge-caution-bg: var(--sl-color-orange-high);
            --sl-badge-tip-bg: var(--sl-color-purple-high);
        }

    .sl-badge {
        display: inline-block;
        border: 1px solid var(--sl-color-border-badge);
        border-radius: 0.25rem;
        font-family: var(--sl-font-system-mono);
        font-size: var(--sl-text-xs);
        font-weight: 400;
        padding: 0.125rem 0.375rem;
        line-height: 1;
        color: #fff;
        background-color: var(--sl-color-bg-badge);
        overflow-wrap: anywhere;
        box-shadow: 0 0 8px var(--sl-color-border-badge);
    }

    .outline {
        --sl-color-bg-badge: transparent;
        --sl-color-border-badge: currentColor;
        color: inherit;
    }

    .default {
        --sl-color-bg-badge: var(--sl-color-accent-low);
        --sl-color-border-badge: var(--sl-color-accent);
    }

    .note {
        --sl-color-bg-badge: var(--sl-color-blue-low);
        --sl-color-border-badge: var(--sl-color-blue);
    }

    .danger {
        --sl-color-bg-badge: var(--sl-color-red-low);
        --sl-color-border-badge: var(--sl-color-red);
    }

    .success {
        --sl-color-bg-badge: var(--sl-color-green-low);
        --sl-color-border-badge: var(--sl-color-green);
    }

    .caution {
        --sl-color-bg-badge: var(--sl-color-orange-low);
        --sl-color-border-badge: var(--sl-color-orange);
    }

    .tip {
        --sl-color-bg-badge: var(--sl-color-purple-low);
        --sl-color-border-badge: var(--sl-color-purple);
    }

    :global([data-theme="light"]) .default {
        --sl-color-bg-badge: var(--sl-color-accent-high);
    }

    :global([data-theme="light"]) .note {
        --sl-color-bg-badge: var(--sl-color-blue-high);
    }

    :global([data-theme="light"]) .danger {
        --sl-color-bg-badge: var(--sl-color-red-high);
    }

    :global([data-theme="light"]) .success {
        --sl-color-bg-badge: var(--sl-color-green-high);
    }

    :global([data-theme="light"]) .caution {
        --sl-color-bg-badge: var(--sl-color-orange-high);
    }

    :global([data-theme="light"]) .tip {
        --sl-color-bg-badge: var(--sl-color-purple-high);
    }
</style>
