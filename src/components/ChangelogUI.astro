<div
    class="fixed z-10 w-full h-full bg-[rgba(0,0,0,0.5)] hidden items-center justify-center flex-col top-0"
    id="changelog-outer"
>
    <div
        class="w-[90%] md:w-3xl h-md bg-dark-4 font-jbm p-4 overflow-scroll text-white"
        id="changelog-container"
    >
        <p class="text-white text-lg font-bold">Changelog</p>
        <div
            id="changelog"
            class="mt-4 markdown overflow-scroll lg:overflow-unset w-full"
        >
            Loading...
        </div>
    </div>
</div>

<script>
    import { marked } from "marked";

    let outer = document.getElementById("changelog-outer");
    let container = document.getElementById("changelog-container");
    let holder = document.getElementById("changelog");

    const showChangelog = async (changelog: string) => {
        if (!outer || !holder) return;

        outer.style.display = "flex";
        holder.innerHTML = await marked(atob(changelog));
    };

    const hideChangelog = async () => {
        if (!outer || !holder) return;

        outer.style.display = "none";
        holder.innerHTML = "Loading...";
    };

    window.addEventListener("keydown", (ev) => {
        if (ev.code == "Escape") hideChangelog();
    });

    const updateLinks = () => {
        outer = document.getElementById("changelog-outer");
        container = document.getElementById("changelog-container");
        holder = document.getElementById("changelog");

        outer?.addEventListener("click", () => {
            hideChangelog();
        });

        container?.addEventListener("click", (ev) => {
            ev.preventDefault();
            ev.stopPropagation();
        });

        const as = document.getElementsByTagName("a");

        for (const a of as) {
            if (a.href.includes("!!changelog:")) {
                const data = a.href.split("!!changelog:").pop();
                const clone = a.cloneNode(true);

                a.parentNode!.replaceChild(clone, a);

                clone.addEventListener("click", (ev) => {
                    ev.preventDefault();
                    ev.stopPropagation();

                    showChangelog(data!);
                });
            }
        }
    };

    window.addEventListener("load", updateLinks);
    document.addEventListener("astro:page-load", updateLinks);
</script>
